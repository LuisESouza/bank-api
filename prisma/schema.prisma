generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model login {
  id         Int       @id @default(autoincrement())
  data_login DateTime? @default(now()) @db.Timestamp(6)
  user_id    Int       @unique
  registro   registro  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model perfil {
  id        Int      @id @default(autoincrement())
  user_id   Int      @unique
  nome      String   @db.VarChar(255)
  cpf       String   @unique @db.VarChar(11)
  email     String   @unique @db.VarChar(255)
  type_user String   @db.VarChar(255)
  registro  registro @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  wallet    wallet?
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model registro {
  id        Int     @id @default(autoincrement())
  nome      String  @db.VarChar(255)
  cpf       String  @unique @db.VarChar(11)
  email     String  @unique @db.VarChar(255)
  senha     String  @db.VarChar(255)
  type_user String  @db.VarChar(10)
  login     login?
  perfil    perfil?
}

model transactions {
  id                                   Int       @id @default(autoincrement())
  payer_id                             Int
  payee_id                             Int
  valor                                Decimal   @db.Decimal(10, 2)
  created_at                           DateTime? @default(now()) @db.Timestamp(6)
  status                               String?   @default("pendente") @db.VarChar(20)
  wallet_transactions_payee_idTowallet wallet    @relation("transactions_payee_idTowallet", fields: [payee_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction)
  wallet_transactions_payer_idTowallet wallet    @relation("transactions_payer_idTowallet", fields: [payer_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction)
}

model wallet {
  id                                         Int            @id @default(autoincrement())
  user_id                                    Int            @unique
  saldo                                      Decimal?       @default(0.00) @db.Decimal(10, 2)
  updated_at                                 DateTime?      @default(now()) @db.Timestamp(6)
  transactions_transactions_payee_idTowallet transactions[] @relation("transactions_payee_idTowallet")
  transactions_transactions_payer_idTowallet transactions[] @relation("transactions_payer_idTowallet")
  perfil                                     perfil         @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction)
}
